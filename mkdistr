# if [ `id -u` -ne 0 ]
# then
# 	echo You should run this script as superuser >&2
# 	exit 1
# fi

VERSION=$(git branch | grep '^\* ' | sed -e 's/[* ]//g' -e 's/-.*//')
RELEASE=$(git branch | grep '^\* ' | sed -e 's/[* ]//g' -e 's/.*-//')

if [ "$VERSION" = master ]
then
	echo Not allowed to distribute the MASTER version >&2
	exit 2
fi

# Make new version.c file
#
rm -f version.c

if ./mkversion
then
	:
else
	echo Not possible to generate version.c >&2
	exit 3
fi

############################################################################
# Generate new executables
############################################################################
make clean

if make
then
	:
else
	echo Programs can not be compiled
	exit 1
fi

############################################################################
# Prepare a directory for distribution under /tmp
# and copy all required stuff 
############################################################################
rm -rf         		/tmp/atop-$VERSION 2> /dev/null

mkdir          		/tmp/atop-$VERSION
cp *.[ch]		/tmp/atop-$VERSION
cp Makefile    		/tmp/atop-$VERSION
cp README		/tmp/atop-$VERSION
cp COPYING		/tmp/atop-$VERSION
git log >        	/tmp/atop-$VERSION/ChangeLog
cp AUTHOR		/tmp/atop-$VERSION
cp atop.daily  		/tmp/atop-$VERSION
cp atop.cron  		/tmp/atop-$VERSION
cp atop.init  		/tmp/atop-$VERSION
cp atop.service 	/tmp/atop-$VERSION
cp psaccs_atop 		/tmp/atop-$VERSION
cp psaccu_atop 		/tmp/atop-$VERSION
cp 45atoppm  		/tmp/atop-$VERSION
cp -r man      		/tmp/atop-$VERSION

############################################################################
# All files copied.
# Make compressed tar-archives with and without release number.
############################################################################
#
ORIGDIR=`pwd`

cd /tmp

rm -f			atop-$VERSION.tar 2> /dev/null
tar cvf 		atop-$VERSION.tar atop-$VERSION

rm -f          		atop-$VERSION.tar.gz 2> /dev/null
gzip            	atop-$VERSION.tar


rm -rf			atop-$VERSION-$RELEASE     2> /dev/null
mv atop-$VERSION	atop-$VERSION-$RELEASE

rm -f			atop-$VERSION-$RELEASE.tar 2> /dev/null
tar cvf 		atop-$VERSION-$RELEASE.tar atop-$VERSION-$RELEASE
rm -rf			atop-$VERSION-$RELEASE     2> /dev/null

rm -f          		atop-$VERSION-$RELEASE.tar.gz 2> /dev/null
gzip            	atop-$VERSION-$RELEASE.tar

############################################################################
# Make an RPM-distribution
############################################################################
if [ -d /usr/src/redhat/SOURCES ]
then
	cp atop-$VERSION.tar.gz /usr/src/redhat/SOURCES
fi

if [ -d /usr/src/RPM/SOURCES ]
then
	cp atop-$VERSION.tar.gz /usr/src/RPM/SOURCES
fi

if [ -d $HOME/rpmbuild/SOURCES ]
then
	cp atop-$VERSION.tar.gz $HOME/rpmbuild/SOURCES/atop-$VERSION.tar.gz
fi

cd $ORIGDIR

sed -e "s/XVERSX/$VERSION/g" -e "s/XRELEX/$RELEASE/g" atop.spec 	\
					> /tmp/atop-$VERSION-$RELEASE.spec

cd /tmp

if rpmbuild -ba atop-$VERSION-$RELEASE.spec #  > /dev/null
then
	if [ -d /usr/src/redhat/SOURCES ]
	then
		cp /usr/src/redhat/RPMS/i386/atop-$VERSION-$RELEASE-*.i386.rpm /tmp
		cp /usr/src/redhat/SRPMS/atop-$VERSION-$RELEASE-*.src.rpm      /tmp
	fi

	if [ -d /usr/src/RPM/SOURCES ]
	then
		cp /usr/src/RPM/RPMS/i386/atop-$VERSION-$RELEASE.i386.rpm /tmp
		cp /usr/src/RPM/SRPMS/atop-$VERSION-$RELEASE.src.rpm      /tmp
	fi

	if [ -d $HOME/rpmbuild/SOURCES ]
	then
	   cp $HOME/rpmbuild/RPMS/x86_64/atop-$VERSION-$RELEASE.x86_64.rpm /tmp
	   cp $HOME/rpmbuild/SRPMS/atop-$VERSION-$RELEASE.src.rpm          /tmp
	fi

	echo
	echo /tmp/atop-$VERSION-$RELEASE.x86_64.rpm ready
	echo /tmp/atop-$VERSION-$RELEASE.src.rpm  ready
fi

echo
echo /tmp/atop-$VERSION-$RELEASE.tar.gz ready
exit 0

############################################################################
# Make compressed tar-archives for the kernel-patches
############################################################################
echo
cd /tmp

ls $ORIGDIR/atoppatch/01patch* | sed 's/.*01patch-//' | sed 's/_.*//' |
				sort | uniq | while read KVERS
do
	rm -rf atoppatch-kernel-$KVERS  2> /dev/null
	mkdir  atoppatch-kernel-$KVERS

	cp $ORIGDIR/atoppatch/*$KVERS*     atoppatch-kernel-$KVERS
	cp $ORIGDIR/atoppatch/README.patch atoppatch-kernel-$KVERS
	tar -czf atoppatch-kernel-$KVERS.tar.gz atoppatch-kernel-$KVERS
	rm -rf atoppatch-kernel-$KVERS  2> /dev/null
	echo /tmp/atoppatch-kernel-$KVERS.tar.gz ready
done
